# Pre-release workflow

name: Pre-Release Workflow

on:
  pull_request:
    branches: [ pre ]

  workflow_dispatch:

jobs:

  # Flutter Client Application
  app:
    name: Pre-Release App
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app

    steps:
      - uses: actions/checkout@v2

  # NodeJs Api
  api:
    name: Pre-Release Api
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api

    steps:
      - uses: actions/checkout@v2

      # Install dependencies
      - run: npm install

      # Run unit tests
      - run: npm run test
      #- run: ls -R

      # Code coverage
      - name: Deploy code coverage to codecov.io
        uses: codecov/codecov-action@v1 
        with: 
          token: ${{ secrets.CODECOV_TOKEN }} 
          file: ./api/coverage.lcov

      #Deploy API to Heroku
      - name: Deploy Api to Heroku (Pre-Release Environment)
        uses: gonuit/heroku-docker-deploy@v1.3.2
        with:
          email: ${{ secrets.HEROKU_EMAIL_ADDRESS }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME_API_PRE }}
          dockerfile_directory: ./api
          dockerfile_name: Dockerfile
          docker_options: "--no-cache"
          process_type: web

  # PostgreSql Database
  db:
    name: Pre-Release Database
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api/data

    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        env:
          DB_PRE_HOST: ${{ secrets.DB_PRE_HOST }}
          DB_PRE_NAME: ${{ secrets.DB_PRE_NAME }}
          DB_PRE_USER: ${{ secrets.DB_PRE_USER }}
          DB_PRE_PASSWORD: ${{ secrets.DB_PRE_PASSWORD }}
        run: |
          npm install
          npx sequelize-cli db:migrate --env pre

